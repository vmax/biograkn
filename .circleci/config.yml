version: 2.1
commands:
  install-bazel-linux-rbe:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-linux.sh
      - run: bash ./install-bazel-linux.sh && rm ./install-bazel-linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-rbe.sh
      - run: bash ./install-bazel-rbe.sh && rm ./install-bazel-rbe.sh

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe -- << parameters.command >>

  run-grakn-server:
    steps:
      - run-bazel-rbe:
          command: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
#      - run: bazel run @graknlabs_build_tools//checkstyle:test-coverage
      - run: bazel --host_jvm_args=-Xmx16g build //...

  test-assembly-linux-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start
      - run: bazel test //migrator:assemble-mock-test
      - run: ./dist/grakn-core-all-linux/grakn server stop
  test-assembly-mac-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-mac-zip
      - run: unzip bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac.zip -d bazel-genfiles/external/graknlabs_grakn_core/
      - run: nohup bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server start
      - run: bazel test //migrator:assemble-mock-test
      - run: bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server stop

  assembly-linux-all:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C dist/
      - run: nohup dist/grakn-core-all-linux/grakn server start
      #      - run: bazel run //migrator:migrator-bin TODO: uncomment
      - run: dist/grakn-core-all-linux/grakn server stop
      - run: mv dist/grakn-core-all-linux dist/biograkn-linux
      - run: tar -czf dist/biograkn-linux.tar.gz dist/biograkn-linux
      - persist_to_workspace:
          root: dist
          paths:
            - biograkn-linux.tar.gz
  test-assembly-linux-all:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - attach_workspace:
          at: dist
      - run: tar -xvzf dist/biograkn-linux.tar.gz
      - run: nohup dist/biograkn-linux/grakn server start
#      - run: bazel test //migrator:assemble-all-test TODO: uncomment
      - run: dist/biograkn-linux/grakn server stop

  assembly-mac-all:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-mac-zip
      - run: mkdir dist && unzip bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac.zip -d dist/
      - run: nohup dist/grakn-core-all-mac/grakn server start
      #      - run: bazel run //migrator:migrator-bin TODO: uncomment
      - run: dist/grakn-core-all-mac/grakn server stop
      - run: mv dist/grakn-core-all-mac dist/biograkn-mac
      - run: zip -r dist/biograkn-mac.zip dist/biograkn-mac
      - persist_to_workspace:
          root: dist
          paths:
            - biograkn-mac.zip
  test-assembly-mac-all:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - attach_workspace:
          at: dist
      - run: unzip dist/biograkn-mac.zip
      - run: nohup dist/biograkn-mac/grakn server start
      #      - run: bazel test //migrator:assemble-all-test TODO: uncomment
      - run: dist/biograkn-mac/grakn server stop

  cache-distribution:
    machine: true
    working_directory: ~/biograkn
    steps:
      - attach_workspace:
          at: dist
      - restore_cache:
          key: distribution-{{ .Environment.CIRCLE_SHA1 }}
      - run: |
          if [ "$(ls -A ~/cache)" ]; then
            ls ~/cache/
            mkdir -p dist
            cp ~/cache/* dist/
          else
            ls dist
            mkdir -p ~/cache
            cp dist/* ~/cache/
          fi
      - save_cache:
          key: distribution-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/cache
      - persist_to_workspace:
          root: dist
          paths:
            - ./*

  deploy-gcp-snapshot:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - attach_workspace:
          at: dist
      - run: |
          export DEPLOY_PACKER_GCP_ACCOUNT_FILE=$(mktemp)
          echo $GCP_DEPLOY_KEY_SNAPSHOT > $DEPLOY_PACKER_GCP_ACCOUNT_FILE
          export DEPLOY_PACKER_VERSION=$(git rev-parse HEAD)
          deployment/gcp/deploy-gcp-snapshot.py

  test-deployment-gcp:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          pip install grakn-client
          test/deployment/gcp/gcp.py

  release-approval:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_build_tools//ci:release-approval

  deploy-github:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - attach_workspace:
          at: dist
      - run: |
          export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          deployment/github/deploy-github.py $CIRCLE_SHA1

  deploy-gcp:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - attach_workspace:
          at: dist
      - run: |
          export DEPLOY_PACKER_GCP_ACCOUNT_FILE=$(mktemp)
          echo $GCP_DEPLOY_KEY_RELEASE > $DEPLOY_PACKER_GCP_ACCOUNT_FILE
          export DEPLOY_PACKER_VERSION=$(git rev-parse HEAD)
          deployment/gcp/deploy-gcp.py

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: |
          git push --delete \
            "https://$REPO_GITHUB_USERNAME:$REPO_GITHUB_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git" \
            biograkn-release-branch

workflows:
  biograkn-commit:
    jobs:
      - build:
          filters:
            branches:
              ignore: biograkn-release-branch

      - test-assembly-linux-mock:
          filters:
            branches:
              ignore: biograkn-release-branch
          requires:
            - build
      - test-assembly-mac-mock:
          filters:
            branches:
              ignore: biograkn-release-branch
          requires:
            - build

  biograkn-nightly:
    jobs:
      - assembly-linux-all:
          filters:
            branches:
              only: master
      - assembly-mac-all:
          filters:
            branches:
              only: master

      - test-assembly-linux-all:
          filters:
            branches:
              only: master
          requires:
            - assembly-linux-all
      - test-assembly-mac-all:
          filters:
            branches:
              only: master
          requires:
            - assembly-mac-all

      - cache-distribution:
          filters:
            branches:
              only: master
          requires:
            - test-assembly-linux-all
            - test-assembly-mac-all

      - deploy-gcp-snapshot:
          filters:
            branches:
              only: master
          requires:
            - cache-distribution
      - test-deployment-gcp:
          filters:
            branches:
              only: master
          requires:
            - deploy-gcp-snapshot

      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - test-deployment-gcp

  biograkn-release:
    jobs:
      - cache-distribution:
          filters:
            branches:
              only: biograkn-release-branch

      - deploy-github:
          filters:
            branches:
              only: biograkn-release-branch
          requires:
            - cache-distribution

      - deploy-approval:
          type: approval
          filters:
            branches:
              only: biograkn-release-branch
          requires:
            - deploy-github

      - deploy-gcp:
          filters:
            branches:
              only: biograkn-release-branch
          requires:
            - deploy-approval

      - release-cleanup:
          filters:
            branches:
              only: biograkn-release-branch
          requires:
            - deploy-gcp
            - deploy-github
